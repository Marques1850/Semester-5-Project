@startuml V3_Processos_US380
boundary x 
participant robotRoute
participant robotController <<Controller>>
participant robotService <<Service>>
participant robotMap <<Mapper>>
participant robotDTO <<DTO>>
participant robot <<Entity>>
participant robotRepository <<Repository>>
participant robotTypeRepository <<Repository>>
database driverDB


x -> robotRoute: 1. GET -> /api/robot/getRobots
activate robotRoute
robotRoute -> robotController: 2. Handles the request, call robotController.getRobots(req, res, next)
activate robotController
robotController -> robotService: 3. getRobots()

activate robotService
robotService -> robotRepository: 4. findAll()
activate robotRepository
robotRepository -> driverDB: 5. find()
activate driverDB
deactivate driverDB
robotRepository --> robotService: 6. return robots
deactivate robotRepository

loop for each robot in robots
robotService -> robotMap: 10. toDTO(robot)
activate robotMap
robotMap --> robot: 10. code()
activate robot
deactivate robot
robotMap --> robot: 11. nickname()
activate robot
deactivate robot
robotMap --> robot: 12. robotTypeCode()
activate robot
deactivate robot
robotMap --> robot: 13. serialNumber()
activate robot
deactivate robot
robotMap --> robot: 14. description()
activate robot
deactivate robot
robotMap --> robot: 15. status()
activate robot
deactivate robot
robotMap --> robotService: 16. return robotDTO
robotService --> robotService: 17. add robotDTO to robotsDTO
end
deactivate robotMap

robotService --> robotController: 17. return robotsDTO
deactivate robotService

robotController --> robotRoute: 18. return response status and json
deactivate robotController
robotRoute --> x: 19. response status and json
deactivate robotRoute
